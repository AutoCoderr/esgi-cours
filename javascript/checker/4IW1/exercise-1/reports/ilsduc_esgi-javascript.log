
leet - 'leet' OK
leet - 'yoda' OK
leet - 'evaluation' OKLoading script...

leet - 'mon travail' OK
leet - ' ' OK
leet - 'null' OK
leet - 'Object' OK

Checking verlan
verlan - 'anaconda' OK
Tue Dec 17 2019 16:08:30 GMT+0000 (Coordinated Universal Time) - Starting tests...

verlan - 'kayak' OK
verlan - 'yoda m Luke' OKChecking ucfirst
verlan - '70da m L(_)k3' OK
ucfirst - 'test' OK
verlan - ' ' OK
ucfirst - ' test' KO
	expected : " test" - got " Test"
verlan - 'null' OK
ucfirst - 'Test' OK
verlan - 'Object' OK
ucfirst - 'TEST' KO
	expected : "TEST" - got "Test"


ucfirst - 'null' OKChecking yoda
ucfirst - 'Object' OK


yoda - 'anaconda' OKChecking capitalize
capitalize - 'test' OK
yoda - 'yoda m Luke' OK
capitalize - ' test' KO
	expected : " Test" - got "Test"
yoda - 'Inverser la position des mots d’une phrase' OK
capitalize - 'ipsum DOLOR' OK
yoda - ' ' KO
	expected : " " - got ""
capitalize - 'sit 8met consectetur' OK
capitalize - '_dipiscing elit' OK
yoda - 'null' OK
capitalize - 'null' OK
yoda - 'Object' OK
capitalize - 'Object' OK



Checking vigChecking camelCase
vig - 'anticonstitutionnellement - foo' KO
	expected : "fbhnqcsghnhiywcsbsqzsrsby" - got undefined
camelCase - 'toggle case is the coolest' OK
vig - 'antiConstiTutioNnellement - foo' KO
	expected : "fbhnqcsghnhiywcsbsqzsrsby" - got undefined
camelCase - 'toggleCase is the coolest' OK
vig - 'une phrase tres tres longue mais qui ne veut absolument rien dire car c est juste un test - nawakdecheznawak' KO
	expected : "hna prueul xqrs prof lknqxi ohmr due no ieqt kewqsylrnp rsrn zibh gcy g dft fucge qn dhwv" - got undefined
camelCase - 'ToggleCase is the 3oolest' OK
vig - ' - test' KO
	expected : " " - got undefined
vig - 'null - test' KO
	Unexpected behaviour : TypeError - Cannot read property '0' of null
camelCase - 'ToggleCaseIsTheCoolest' OK
vig - 'Object - test' KO
	expected : "" - got undefined
camelCase - 'ToggleCase is_the coolest' KO
	expected : "TogglecaseIsTheCoolest" - got "TogglecaseIs_theCoolest"


camelCase - ' toggleCase' OKChecking prop_access
prop_access - 'path exist - value string' OK
camelCase - 'null' OK
prop_access - 'path exist - value object' OK
camelCase - 'Object' OK
prop_access - 'path exist - value array' OK
prop_access - 'path not exist' KO
	expected : animal.gender not exist - got animal.gender not exists


prop_access - 'path empty' KO
	expected : {"animal":{"type":{"name":"dog"}}} - got undefinedChecking snake_case
prop_access - 'object null' KO
	expected : test not exist - got null
prop_access - 'path null' KO
	expected : {"animal":{"type":{"name":"dog"}}} - got ""
snake_case - 'toggle case is the coolest' OK


snake_case - 'toggleCase is the coolest' OK
snake_case - 'ToggleCase is the 3oolest' OK
snake_case - 'ToggleCaseIsTheCool3st' OK
snake_case - 'ToggleCase is_the coolest' OK
snake_case - ' toggleCase' KO
	expected : "_togglecase" - got "togglecase"
snake_case - 'null' OK
snake_case - 'Object' OK

Checking leet
leet - 'anaconda' OK
leet - 'anacoNDa' OK
leet - 'leet' OK
leet - 'yoda' OK
leet - 'evaluation' OK
leet - 'mon travail' OK
leet - ' ' OK
leet - 'null' OK
leet - 'Object' OK

Checking verlan
verlan - 'anaconda' OK
verlan - 'kayak' OK
verlan - 'yoda m Luke' OK
verlan - '70da m L(_)k3' OK
verlan - ' ' OK
verlan - 'null' OK
verlan - 'Object' OK

Checking yoda
yoda - 'anaconda' OK
yoda - 'yoda m Luke' OK
yoda - 'Inverser la position des mots d’une phrase' OK
yoda - ' ' KO
	expected : " " - got ""
yoda - 'null' OK
yoda - 'Object' OK

Checking vig
vig - 'anticonstitutionnellement - foo' KO
	expected : "fbhnqcsghnhiywcsbsqzsrsby" - got undefined
vig - 'antiConstiTutioNnellement - foo' KO
	expected : "fbhnqcsghnhiywcsbsqzsrsby" - got undefined
vig - 'une phrase tres tres longue mais qui ne veut absolument rien dire car c est juste un test - nawakdecheznawak' KO
	expected : "hna prueul xqrs prof lknqxi ohmr due no ieqt kewqsylrnp rsrn zibh gcy g dft fucge qn dhwv" - got undefined
vig - ' - test' KO
	expected : " " - got undefined
vig - 'null - test' KO
	Unexpected behaviour : TypeError - Cannot read property '0' of null
vig - 'Object - test' KO
	expected : "" - got undefined

Checking prop_access
prop_access - 'path exist - value string' OK
prop_access - 'path exist - value object' OK
prop_access - 'path exist - value array' OK
prop_access - 'path not exist' KO
	expected : animal.gender not exist - got animal.gender not exists
prop_access - 'path empty' KO
	expected : {"animal":{"type":{"name":"dog"}}} - got undefined
prop_access - 'object null' KO
	expected : test not exist - got null
prop_access - 'path null' KO
	expected : {"animal":{"type":{"name":"dog"}}} - got ""

